<?xml version="1.0"?>
<project name="bindgen" xmlns:ivy="antlib:org.apache.ivy.ant">
	<import file="ivytargets.xml"/>

	<target name="clean" description="delete the bin directory">
		<delete dir="bin"/>
	</target>

	<target name="compile" description="compile src/ to bin/main/">
		<mkdir dir="bin/main"/>
		<javac srcdir="src/main/java" destdir="bin/main" debug="true" nowarn="yes" source="1.6" target="1.6" encoding="utf8">
			<compilerarg value="-proc:none"/>
			<classpath>
				<fileset dir="lib/build" includes="**/*.jar"/>
			</classpath>
		</javac>
	</target>

	<target name="annotations" depends="compile" description="jar only the annotations into the examples project">
		<jar destfile="bin/annotations.jar">
			<fileset dir="bin/main" includes="org/bindgen/*.class,org/bindgen/binding/*.class"/>
		</jar>
		<copy file="bin/annotations.jar" todir="../examples/lib"/>
	</target>

	<!--
	I'm not entirely sure using jarjar here is best practice. Eclipse
	requires bindgen.jar to be just one jar, and bringing in joist-util
	without rewriting seemed likely to cause jar hell confusion. So we'll go
	with this for now.
	-->
	<target name="jar" depends="compile,ivy.retrieve" description="jar bin/main/ into bin/jars/bindgen.jar and bin/sources/bindgen.jar">
		<taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask" classpath="lib/build/jarjar-1.0.jar"/>
		<mkdir dir="bin/jars"/>
		<jarjar destfile="bin/jars/bindgen.jar">
			<fileset dir="bin/main" includes="**/*.class"/>
			<zipfileset src="bin/lib/build/jars/joist.util.jar" includes="joist/sourcegen/**/*.class,joist/util/**/*.class"/>
			<zipfileset dir="META-INF" includes="**/*" prefix="META-INF"/>
			<rule pattern="joist.sourcegen.*" result="org.bindgen.dependencies.sourcegen.Bindgen@1"/>
			<rule pattern="joist.util.*" result="org.bindgen.dependencies.util.Bindgen@1"/>
		</jarjar>
		<mkdir dir="bin/sources"/>
		<zip destfile="bin/sources/bindgen.jar">
			<fileset dir="src/main/java" includes="**/*.java"/>
		</zip>
	</target>

	<!--
	Use a separate task to build the gwt version because gwt would not
	like the jarjar package rewriting (source would not be found) and
	we also need the source included directly into the binary jar instead
	of packaged separately.
	-->
	<target name="gwt-module" depends="compile,ivy.retrieve">
		<jar destfile="bin/jars/bindgen-gwt-module.jar">
			<fileset dir="bin/main" includes="**/*.class"/>
			<fileset dir="src/main/java" includes="**/*" excludes="**/*.java"/>
			<fileset dir="src/main/java" includes="org/bindgen/*.java,org/bindgen/binding/*.java" />
			<zipfileset src="lib/build/joist.util-abef8bb.jar" includes="joist/sourcegen/**/*.class,joist/util/**/*.class"/>
			<zipfileset src="lib/build/joist.util-sources-abef8bb.jar" includes="joist/sourcegen/**/*.java,joist/util/**/*.java"/>
			<zipfileset dir="META-INF" includes="**/*" prefix="META-INF"/>
		</jar>
	</target>

</project>
